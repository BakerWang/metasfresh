###
# #%L
# de.metas.printing.esb.camel
# %%
# Copyright (C) 2015 metas GmbH
# %%
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 2 of the
# License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program.  If not, see
# <http://www.gnu.org/licenses/gpl-2.0.html>.
# #L%
###
#
# AD_Client.Value of the ADempiere client to whom the migration data is belongs
#
ad.client.value=clientValue

#
# ADempiere Request Handler URIs
#
http.domain=localhost:8181

#This option enables CXF Logging Feature which writes inbound and outbound REST messages to log. Possible values are true and false
cxf.rs.loggingFeatureEnabled=false

#
# Error Handling
#
cxf.rs.error=mock:cxf.rs.error

archive.to.printing_client=mock:archive_to_printing_client
#archive.to.printing_client=file:///home/adempiere/esb/archive_to_printing_client/?fileName=print_package_data_${date:now:yyyyMMddHHmmssSSS}&tempPrefix=filepart_";

# Note that the following property is not yet used by the de.metas.esb.*.migration project. 
# That project currently uses the "jms.out.topic.durable" property (see above) plus some hardcoded parameters
#activemq.topic.to.adempiere.durable={{jms.out.topic.nondurable}}?jmsMessageType=Text&requestTimeout={{jms.out.requestTimeout}}

#
# ActiveMQ topics and parameters
# Notes:
#   in camel, the actual endpoint-URI will be build by prepending "activemq:topic:" to the poperties values
#   we force the message type to be "text", because our adempiere component only handles text
#
#activemq.topic.to.adempiere.nondurable=activemq:topic:{{jms.out.topic.nondurable}}?jmsMessageType=Text&requestTimeout={{jms.out.requestTimeout}}
activemq.topic.to.adempiere.nondurable=mock:activemq.topic.to.adempiere.nondurable
#activemq.topic.from.adempiere=activemq:topic:{{jms.in.topic}}?jmsMessageType=Text&replyTo=true&disableReplyTo=false
activemq.topic.from.adempiere=mock:activemq.topic.from.adempiere
